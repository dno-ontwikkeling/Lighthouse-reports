// <auto-generated />
using System;
using LightHouseReports.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LightHouseReports.Data.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20231022190000_UpdateWebsiteModel")]
    partial class UpdateWebsiteModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.LighthouseResultDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Accessibility")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BestPractices")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Performance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Preset")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UrlReportDataModelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UrlReportDataModelId");

                    b.ToTable("LighthouseResultDataModel");
                });

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.ReportDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WebsiteDataModelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteDataModelId");

                    b.ToTable("WebsitesReport");
                });

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.UrlReportDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("UrlReports");
                });

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.WebsiteDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("FoundUrls")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LastRun")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteMaps")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WebisteUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Websites");
                });

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.LighthouseResultDataModel", b =>
                {
                    b.HasOne("LightHouseReports.Data.Interfaces.Models.UrlReportDataModel", null)
                        .WithMany("Results")
                        .HasForeignKey("UrlReportDataModelId");
                });

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.ReportDataModel", b =>
                {
                    b.HasOne("LightHouseReports.Data.Interfaces.Models.WebsiteDataModel", "WebsiteDataModel")
                        .WithMany()
                        .HasForeignKey("WebsiteDataModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebsiteDataModel");
                });

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.UrlReportDataModel", b =>
                {
                    b.HasOne("LightHouseReports.Data.Interfaces.Models.ReportDataModel", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("LightHouseReports.Data.Interfaces.Models.UrlReportDataModel", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
